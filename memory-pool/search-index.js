var searchIndex = {};
searchIndex['memory_pool'] = {"items":[[0,"","memory_pool","A Rust library providing a global, thread-safe memory pool,\nideal for when you need a temporary scratch buffer but you\ndon't want to be constantly allocating memory.",null,null],[5,"acquire","","Constructs an object of type `T` with memory from the thread-local pool.",null,{"inputs":[],"output":{"name":"t"}}],[5,"release","","Destroys the `value` and transfers its internal memory buffer back into the thread-local pool.",null,{"inputs":[{"name":"t"}],"output":null}],[5,"borrow","","Constructs a temporary instance of `T` using the memory from the thread-local pool.",null,{"inputs":[{"name":"f"}],"output":{"name":"r"}}],[11,"get_buffer","collections::vec","",0,null],[11,"empty","","",0,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"from_buffer","","",0,null],[11,"get_buffer","collections::string","",1,null],[11,"empty","","",1,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from_buffer","","",1,null]],"paths":[[3,"Vec"],[3,"String"]]};
initSearch(searchIndex);
